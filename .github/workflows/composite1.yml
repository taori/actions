name: CI

on: 
    push:
        branches:
          - main
        paths:
          - .github/workflows/*
          - src/composite1/**            

    pull_request:    
        branches:
          - main
        types: 
          - opened
          - reopened
          - synchronize 

    workflow_dispatch:
        inputs:  
        
            versionSuffix:
                type: string
                description: Version suffix for package
                default: ""
        
            publish:
                type: boolean
                default: true

            publishSymbols:
                type: boolean
                default: true

            removePrereleases:
                type: boolean
                default: true
                
            configuration:
                required: false
                default: Release
                type: choice
                options:
                - Debug
                - Release

            verbosity:
                required: false
                default: minimal
                type: choice
                options:
                - quiet
                - minimal
                - normal
                - detailed
                - diagnostic

jobs:
  parameters:
    runs-on: ubuntu-latest
  
    outputs:      
      versionSuffix : ${{ steps.parameters.outputs.versionSuffix }}
      configuration : ${{ steps.parameters.outputs.configuration }}
      verbosity : ${{ steps.parameters.outputs.verbosity }}
      publish : ${{ steps.parameters.outputs.publish }}
      publishSymbols : ${{ steps.parameters.outputs.publishSymbols }}
      removePrereleases : ${{ steps.parameters.outputs.removePrereleases }}

    steps:
    - name: Setting up parameters
      id: parameters
      shell: pwsh
      run: |
        Write-Host "Setting up parameters"

        $suffixMap = @{"push"="alpha${{github.run_number}}"; "pull_request"="beta${{github.run_number}}"; "workflow_dispatch"="${{github.event.inputs.versionSuffix}}"};

        echo "::set-output name=versionSuffix::$($suffixMap['${{github.event_name}}'])"

        if('${{github.event_name}}' -eq 'workflow_dispatch'){
            echo "::set-output name=configuration::${{github.event.inputs.configuration}}"
            echo "::set-output name=verbosity::${{github.event.inputs.verbosity}}"
            echo "::set-output name=publish::${{github.event.inputs.publish}}"
            echo "::set-output name=publishSymbols::${{github.event.inputs.publishSymbols}}"
            echo "::set-output name=removePrereleases::${{github.event.inputs.removePrereleases}}"

        } else  {
            echo "::set-output name=configuration::Release"
            echo "::set-output name=verbosity::Minimal"
            echo "::set-output name=publish::true"
            echo "::set-output name=publishSymbols::true"
            echo "::set-output name=removePrereleases::false"
        }


    - name: printing printing parameters
      shell: pwsh
      run: |
        Write-Host "versionSuffix: $($env:versionSuffix)"
        Write-Host "publish: $($env:publish)"
        Write-Host "publishSymbols: $($env:publishSymbols)"
        Write-Host "verbosity: $($env:verbosity)"
        Write-Host "configuration: $($env:configuration)"
        Write-Host "removePrereleases: $($env:removePrereleases)"
      env:        
        versionSuffix : ${{ steps.parameters.outputs.versionSuffix }}        
        publish : ${{ steps.parameters.outputs.publish }}        
        verbosity : ${{ steps.parameters.outputs.verbosity }}        
        configuration : ${{ steps.parameters.outputs.configuration }}        
        publishSymbols : ${{ steps.parameters.outputs.publishSymbols }}        
        removePrereleases : ${{ steps.parameters.outputs.removePrereleases }}        

  package:
    needs: parameters
    uses: taori/actions/.github/workflows/nupkg.yml@main
    with:
      solutionPath: src/composite1/All.sln
      projectPath: src/composite1/composite1.csproj
      versionSuffix: ${{ needs.parameters.outputs.versionSuffix }}
      publish: ${{ needs.parameters.outputs.publish == 'true' }}
      publishSymbols: ${{ needs.parameters.outputs.publishSymbols == 'true' }}
      removePrereleases: ${{ needs.parameters.outputs.removePrereleases == 'true' }}
      packageId: demo.composite1
      configuration: ${{ needs.parameters.outputs.configuration }}
      verbosity: ${{ needs.parameters.outputs.verbosity }}
      dotnetVersion: 6.0.x
    secrets:
      nuget: ${{ secrets.NUGET }}
      