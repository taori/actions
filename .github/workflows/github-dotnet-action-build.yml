name: build and test

on:
  workflow_call:
    outputs:
      artifact-name-cobertura:
        description: "The name of the cobertura artifact reference"
        value: ${{ jobs.execute.outputs.cobertura }}
        
    inputs:      
      solutionPath:
        required: true
        type: string
        
      verbosity:
        required: false
        type: string
        default: "minimal"    
        
      dotnetVersion:
        required: false
        type: string
        default: "5.0.x, 6.0.x"
        
      concurrencyToken:
        required: false
        type: string
        default: ci-${{ github.ref }}
        
      concurrencyAbortable:
        required: false
        type: boolean
        default: true
        
      debugWorkflow:
        required: false
        type: boolean
        default: false
        
      testArguments:
        required: false
        type: string
        default: ""
        
      coberturaArtifactName:
        required: false
        type: string
        default: "cobertura-raw"

jobs:
  
  execute:
    
    outputs:
      cobertura: ${{ steps.upload-cobertura.outputs.result }}
            
    concurrency:    
      group: "${{ inputs.concurrencyToken }}"
      cancel-in-progress: ${{ inputs.concurrencyAbortable }}      

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    env:            
      DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      
      # - name: stop
      #   run: exit 1

    - name: Harden Runner
      uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34
      with:
        egress-policy: block
        allowed-endpoints: |
          api.github.com:443
          api.nuget.org:443
          auth.docker.io:443
          fulcio.sigstore.dev:443
          ghcr.io:443
          github.com:443
          mcr.microsoft.com:443
          pipelines.actions.githubusercontent.com:443
          pkg-containers.githubusercontent.com:443
          registry-1.docker.io:443
          storage.googleapis.com:443
    
    - name: environment
      id: environment
      shell: bash
      run: |
        REPOSITORY_NAME="${{ github.repository }}"
        OWNER=$(echo $REPOSITORY_NAME | cut -d'/' -f1)
        REPO=$(echo $REPOSITORY_NAME | cut -d'/' -f2)
        echo "updateRepo=${{ (github.ref_name == github.event.repository.default_branch && (github.event.pull_request.merged == true || github.event_name == 'push' )) }}" >> "$GITHUB_OUTPUT" 
        echo "refName=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
        echo "eventName=${{ github.event_name }}" >> "$GITHUB_OUTPUT"
        echo "merged=${{ github.event.pull_request.merged || false }}" >> "$GITHUB_OUTPUT"
        echo "defaultBranch=${{ github.event.repository.default_branch }}" >> "$GITHUB_OUTPUT"
          
        if [[ "$REPO" == "$OWNER.github.io" ]]; then        
          echo "pageURL=https://$OWNER.github.io" >> "$GITHUB_OUTPUT"
        else
          echo "pageURL=https://$OWNER.github.io/$REPO" >> "$GITHUB_OUTPUT"
        fi
      
    - uses: actions/checkout@v4.1.7
      with: 
        persist-credentials: true
        repository: ${{ github.event.pull_request.head.repo.full_name }} # required for commit
        ref: ${{ github.event.pull_request.head.ref }} # required for commit
              
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4.3.1
      with:
        dotnet-version: ${{ inputs.dotnetVersion }}   

    - name: Restore dependencies
      run: dotnet restore "${{ inputs.solutionPath }}" --ignore-failed-sources --locked-mode
      
    - name: Build
      run: dotnet build "${{ inputs.solutionPath }}" --verbosity ${{ inputs.verbosity }} -c Release --no-restore 
      
    - name: Test
      run: dotnet test "${{ inputs.solutionPath }}" --verbosity ${{ inputs.verbosity }} -c Release --no-build --collect:"XPlat Code Coverage" -property:CoverletOutputFormat=cobertura --results-directory "./testResults" --logger:"trx;LogFilePrefix=testResults" ${{ inputs.testArguments }}
        
    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4.3.6
      with:
        name: "test results"
        path: ./testResults/testResults*.trx
        if-no-files-found: error
        retention-days: 1
    
    - name: Test Report
      uses: dorny/test-reporter@6e6a65b7a0bd2c9197df7d0ae36ac5cee784230c #v2.0.0
      if: always()
      with:
        name: Test results
        path: ./testResults/testResults*.trx
        reporter: dotnet-trx
        fail-on-empty: 'true'
        fail-on-error: 'true' 
        
    - name: Upload cobertura artifacts
      uses: actions/upload-artifact@v4.3.6
      with:
        name: "${{ inputs.coberturaArtifactName }}${{ github.run_number}}"
        path: ./testResults/**/coverage.cobertura.xml
        if-no-files-found: error
        retention-days: 1
        
    - id: upload-cobertura
      name: provide cobertura artifact name
      run: echo "result=${{ inputs.coberturaArtifactName }}${{ github.run_number}}" >> $GITHUB_OUTPUT