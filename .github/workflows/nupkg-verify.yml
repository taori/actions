name: nupkg-verify.yml

on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/*
      - src/**/*
      - tests/**/*
  
  pull_request:
    branches: [ main ]
    types:
      - opened
      - reopened
      - synchronize
  
  workflow_dispatch:

jobs:

  parameters:
    runs-on: "ubuntu-latest"
    
    outputs:
      publish : ${{ steps.parameters.outputs.publish }}
      publishSymbols : ${{ steps.parameters.outputs.publishSymbols }}
      removePrereleases : ${{ steps.parameters.outputs.removePrereleases }}
      coverageThreshold : ${{ steps.parameters.outputs.coverageThreshold }}
      versionPrefix : ${{ steps.parameters.outputs.versionPrefix }}
      versionSuffix : ${{ steps.parameters.outputs.versionSuffix }}

    steps:

      - name: nuget secret verification
        env:
          NUGET: ${{ secrets.NUGET }}
        if: "${{ env.NUGET == '' }}"
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('"nuget" secret is missing')

      - name: Setting up parameters
        id: parameters
        shell: pwsh
        run: |
          Write-Host "Setting up parameters"
          
          $suffixMap = @{
              "push"="alpha.${{github.run_number}}"; 
              "pull_request"="beta.${{github.run_number}}"; 
              "workflow_dispatch"="${{github.event.inputs.versionSuffix}}"
          };
          $suffix = $suffixMap['${{github.event_name}}']
          if( $suffixMap['workflow_dispatch'] -ne '' -and '${{github.event_name}}' -eq 'workflow_dispatch'){
              $suffix = $($suffix.TrimEnd('.') + ".")
              $suffix = "$($suffix)${{github.run_number}}"
          }  
          
          #   key name                workflow value                                  fallback value
          $values = @(
              @("versionSuffix",      "$suffix",                                      "$suffix"),
              @("versionPrefix",      "${{github.event.inputs.versionPrefix}}",       ""),
              @("publish",            "${{github.event.inputs.publish}}",             "false"),
              @("publishSymbols",     "${{github.event.inputs.publishSymbols}}",      "false"),
              @("removePrereleases",  "${{github.event.inputs.removePrereleases}}",   "false"),
              @("coverageThreshold",  "${{github.event.inputs.coverageThreshold}}",   "60 80")
          )
          
          $manual = $('${{github.event_name}}' -eq 'workflow_dispatch')
          
          foreach($pair in $values){
              $value = $pair[2]
              if($manual -eq $true){
                  $value = $pair[1]
              }
          
              Write-Host "Setting parameter $($pair[0]) => $value"
              #echo "::set-output name=$($pair[0])::$value"
              echo "$($pair[0])=$value" >> $env:GITHUB_OUTPUT
          }    

  build:        
    needs: [parameters]
    uses: ./.github/workflows/nupkg.yml
    with:          
      solutionPath: src/Coverage.sln
      packProjects: src/composite1/composite1.csproj;src/composite2/composite2.csproj
      versionSuffix: ${{ needs.parameters.outputs.versionSuffix }}
      versionPrefix: ${{ needs.parameters.outputs.versionPrefix }}
      buildEnv: "ubuntu-latest"
      dotnetVersion: |
        6.0.x
        8.0.x   
        
  coverage:
    needs: [build, parameters]
    uses: ./.github/workflows/coverage.yml
    with:
      coberturaArtifactsName: ${{ needs.build.outputs.artifact-name-cobertura }}
      threshold: ${{ needs.parameters.outputs.coverageThreshold }}
      debugWorkflow: true
  
  deploy:
    needs: [coverage, parameters, build]
    uses: ./.github/workflows/publish-nupkg.yml
    if: ${{ needs.parameters.outputs.publish == 'true' }}
    with:
      nupkgArtifactName: ${{ needs.build.outputs.artifact-name-nupkg }}
      removePrereleases: ${{ needs.parameters.outputs.removePrereleases == 'true' }}
      publishSymbols: ${{ needs.parameters.outputs.publishSymbols == 'true' }}      
      debugWorkflow: true
    secrets:
      nuget: ${{ secrets.NUGET }} 
